(window.webpackJsonp=window.webpackJsonp||[]).push([[187],{330:function(e,a,c){"use strict";c.r(a);var t=c(0),r=Object(t.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,a=e.$createElement,c=e._self._c||a;return c("div",{staticClass:"content"},[c("h1",{attrs:{id:"高级-10：branch-删过了才想起来有用？"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#高级-10：branch-删过了才想起来有用？","aria-hidden":"true"}},[e._v("#")]),e._v(" 高级 10：branch 删过了才想起来有用？")]),c("p",[c("code",[e._v("branch")]),e._v("  用完就删是好习惯，但有的时候，不小心手残删了一个还有用的 "),c("code",[e._v("branch")]),e._v(" ，或者把一个 "),c("code",[e._v("branch")]),e._v(" 删掉了才想起来它还有用，怎么办？")]),c("h2",{attrs:{id:"reflog-：引用的-log"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#reflog-：引用的-log","aria-hidden":"true"}},[e._v("#")]),e._v(" reflog ：引用的 log")]),c("p",[c("code",[e._v("reflog")]),e._v(' 是 "reference log" 的缩写，使用它可以查看 Git 仓库中的引用的移动记录。如果不指定引用，它会显示 '),c("code",[e._v("HEAD")]),e._v(" 的移动记录。假如你误删了 "),c("code",[e._v("branch1")]),e._v(" 这个 "),c("code",[e._v("branch")]),e._v("，那么你可以查看一下 "),c("code",[e._v("HEAD")]),e._v(" 的移动历史：")]),c("div",{staticClass:"language-shell extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[e._v("git reflog\n")])])]),c("p",[c("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2017/11/22/15fe3de05468c613?w=602&h=78&f=jpeg&s=51327",alt:""}})]),c("p",[e._v("从图中可以看出，"),c("code",[e._v("HEAD")]),e._v(" 的最后一次移动行为是「从 "),c("code",[e._v("branch1")]),e._v(" 移动到 "),c("code",[e._v("master")]),e._v("」。而在这之后，"),c("code",[e._v("branch1")]),e._v(" 就被删除了。所以它之前的那个 "),c("code",[e._v("commit")]),e._v(" 就是 "),c("code",[e._v("branch1")]),e._v(" 被删除之前的位置了，也就是第二行的 "),c("code",[e._v("c08de9a")]),e._v("。")]),c("p",[e._v("所以现在就可以切换回 "),c("code",[e._v("c08de9a")]),e._v("，然后重新创建 "),c("code",[e._v("branch1")]),e._v(" ：")]),c("div",{staticClass:"language-shell extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[e._v("git checkout c08de9a\ngit checkout -b branch1\n")])])]),c("p",[e._v("这样，你刚删除的 "),c("code",[e._v("branch1")]),e._v(" 就找回来了。")]),c("blockquote",[c("p",[e._v("注意：不再被引用直接或间接指向的 "),c("code",[e._v("commit")]),e._v("s 会在一定时间后被 Git 回收，所以使用 "),c("code",[e._v("reflog")]),e._v(" 来找回删除的 "),c("code",[e._v("branch")]),e._v(" 的操作一定要及时，不然有可能会由于 "),c("code",[e._v("commit")]),e._v(" 被回收而再也找不回来。")])]),c("h2",{attrs:{id:"查看其他引用的-reflog"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#查看其他引用的-reflog","aria-hidden":"true"}},[e._v("#")]),e._v(" 查看其他引用的 reflog")]),c("p",[c("code",[e._v("reflog")]),e._v(" 默认查看 "),c("code",[e._v("HEAD")]),e._v(" 的移动历史，除此之外，也可以手动加上名称来查看其他引用的移动历史，例如某个 "),c("code",[e._v("branch")]),e._v("：")]),c("div",{staticClass:"language-shell extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[e._v("git reflog master\n")])])]),c("p",[c("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2017/11/22/15fe3de0548714c7?w=629&h=98&f=jpeg&s=63093",alt:""}})])])}],!1,null,null,null);a.default=r.exports}}]);
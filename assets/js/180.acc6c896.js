(window.webpackJsonp=window.webpackJsonp||[]).push([[180],{319:function(e,t,_){"use strict";_.r(t);var c=_(0),s=Object(c.a)({},function(){var e=this,t=e.$createElement,_=e._self._c||t;return _("div",{staticClass:"content"},[e._m(0),e._m(1),e._m(2),e._m(3),e._m(4),e._m(5),e._m(6),e._m(7),e._m(8),e._m(9),e._m(10),_("blockquote",[e._m(11),e._m(12),_("p",[e._v("你可以通过 "),_("code",[e._v("git config")]),e._v(" 指令来设置 "),_("code",[e._v("push.default")]),e._v(" 的值来改变 "),_("code",[e._v("push")]),e._v(" 的行为逻辑，例如可以设置为「所有分支都可以用 "),_("code",[e._v("git push")]),e._v(" 来直接 push，目标自动指向 "),_("code",[e._v("origin")]),e._v(" 仓库的同名分支」（对应的 "),_("code",[e._v("push.default")]),e._v(" 值："),_("code",[e._v("current")]),e._v("），或者别的什么行为逻辑，你甚至可以设置为每次执行 "),_("code",[e._v("git push")]),e._v(" 时就自动把所有本地分支全部同步到远程仓库（虽然这可能有点耗时和危险）。如果希望详细了解，你可以到"),_("a",{attrs:{href:"https://git-scm.com/docs/git-config#git-config-pushdefault",target:"_blank",rel:"noopener noreferrer"}},[e._v("这里"),_("OutboundLink")],1),e._v("看看。")])]),e._m(13),e._m(14),e._m(15),e._m(16),e._m(17)])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"进阶-2：push-的本质"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#进阶-2：push-的本质","aria-hidden":"true"}},[this._v("#")]),this._v(" 进阶 2：push 的本质")])},function(){var e=this,t=e.$createElement,_=e._self._c||t;return _("p",[e._v("在之前的内容里，我粗略地说过，"),_("code",[e._v("push")]),e._v(" 指令做的事是把你的本地提交上传到中央仓库去，用本地的内容来覆盖掉远端的内容。这个说法其实是不够准确的，但 Git 的知识系统比较庞大，在你对 Git 了解比较少的时候，用「上传本地提交」来解释会比较好理解；而在你知道了 "),_("code",[e._v("branch")]),e._v("，并且明白了 "),_("code",[e._v("branch")]),e._v(" 的具体含义以后，我就可以告诉你 "),_("code",[e._v("push")]),e._v(" 到底是什么了。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"push：把-branch-上传到远端仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#push：把-branch-上传到远端仓库","aria-hidden":"true"}},[this._v("#")]),this._v(" push：把 branch 上传到远端仓库")])},function(){var e=this,t=e.$createElement,_=e._self._c||t;return _("p",[e._v("实质上，"),_("code",[e._v("push")]),e._v(" 做的事是：把当前 "),_("code",[e._v("branch")]),e._v(" 的位置（即它指向哪个 "),_("code",[e._v("commit")]),e._v("）上传到远端仓库，并把它的路径上的 "),_("code",[e._v("commit")]),e._v("s 一并上传。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("例如，我现在的本地仓库有一个 "),t("code",[this._v("master")]),this._v(" ，它超前了远程仓库两个提交；另外还有一个新建的 "),t("code",[this._v("branch")]),this._v(" 叫 "),t("code",[this._v("feature1")]),this._v("，远程仓库还没有记载过它。具体大概像这样：")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2017/11/29/160071880ab72f00?w=567&h=825&f=jpeg&s=47425",alt:"本地仓库超前于远程仓库"}})])},function(){var e=this,t=e.$createElement,_=e._self._c||t;return _("p",[e._v("这时我执行 "),_("code",[e._v("git push")]),e._v("，就会把 "),_("code",[e._v("master")]),e._v(" 的最新位置更新到远端，并且把它的路径上的 "),_("code",[e._v("5")]),_("code",[e._v("6")]),e._v(" 两个 "),_("code",[e._v("commit")]),e._v("s 上传：")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("git push\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2017/11/29/1600725e9973f71d?w=604&h=816&f=gif&s=205017",alt:"把 master push 到远程仓库"}})])},function(){var e=this,t=e.$createElement,_=e._self._c||t;return _("p",[e._v("而如果这时候我再切到 "),_("code",[e._v("feature1")]),e._v(" 去后再执行一次 "),_("code",[e._v("push")]),e._v("，就会把 "),_("code",[e._v("feature1")]),e._v(" 以及它的 "),_("code",[e._v("commit")]),_("code",[e._v("4")]),e._v(" 上传到远程仓库：")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("git checkout feature1\ngit push origin feature1\n")])])])},function(){var e=this,t=e.$createElement,_=e._self._c||t;return _("p",[e._v("这里的 "),_("code",[e._v("git push")]),e._v(" 和之前有点不同：多了 "),_("code",[e._v("origin feature1")]),e._v(" 这两个参数。其中 "),_("code",[e._v("origin")]),e._v(" 是远程仓库的别名，是你在 "),_("code",[e._v("git clone")]),e._v(" 的时候 Git 自动帮你起的；"),_("code",[e._v("feature1")]),e._v(" 是远程仓库中目标 "),_("code",[e._v("branch")]),e._v(" 的名字。这两个参数合起来指定了你要 "),_("code",[e._v("push")]),e._v(" 到的目标仓库和目标分支，意思是「我要 push 到 "),_("code",[e._v("origin")]),e._v(" 这个仓库的 "),_("code",[e._v("feature1")]),e._v(" 分支」。")])},function(){var e=this,t=e.$createElement,_=e._self._c||t;return _("p",[e._v("在 Git 中（2.0 及它之后的版本），默认情况下，你用不加参数的 "),_("code",[e._v("git push")]),e._v(" 只能上传那些之前从远端 "),_("code",[e._v("clone")]),e._v(" 下来或者 "),_("code",[e._v("pull")]),e._v(" 下来的分支，而如果需要 "),_("code",[e._v("push")]),e._v(" 你本地的自己创建的分支，则需要手动指定目标仓库和目标分支（并且目标分支的名称必须和本地分支完全相同），就像上面这样。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2017/11/29/160073ccda56ef07?w=588&h=912&f=gif&s=216802",alt:"push feature1 到远程仓库"}})])},function(){var e=this,t=e.$createElement,_=e._self._c||t;return _("p",[e._v("细心的人可能会发现，在 "),_("code",[e._v("feature1")]),e._v(" 被 "),_("code",[e._v("push")]),e._v(" 时，远程仓库的 "),_("code",[e._v("HEAD")]),e._v(" 并没有和本地仓库的 "),_("code",[e._v("HEAD")]),e._v(" 一样指向 "),_("code",[e._v("feature1")]),e._v("。这是因为，"),_("code",[e._v("push")]),e._v(" 的时候只会上传当前的 "),_("code",[e._v("branch")]),e._v(" 的指向，并不会把本地的 "),_("code",[e._v("HEAD")]),e._v(" 的指向也一起上传到远程仓库。事实上，远程仓库的 "),_("code",[e._v("HEAD")]),e._v(" 是永远指向它的默认分支（即 master，如果不修改它的名称的话），并会随着默认分支的移动而移动的。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"小结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#小结","aria-hidden":"true"}},[this._v("#")]),this._v(" 小结")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("这一节介绍了 "),t("code",[this._v("push")]),this._v(" 这个指令的本质。总结一下关键点：")])},function(){var e=this,t=e.$createElement,_=e._self._c||t;return _("ol",[_("li",[_("code",[e._v("push")]),e._v(" 是把当前的分支上传到远程仓库，并把这个 "),_("code",[e._v("branch")]),e._v(" 的路径上的所有 "),_("code",[e._v("commit")]),e._v("s 也一并上传。")]),_("li",[_("code",[e._v("push")]),e._v(" 的时候，如果当前分支是一个本地创建的分支，需要指定远程仓库名和分支名，用 "),_("code",[e._v("git push origin branch_name")]),e._v(" 的格式，而不能只用 "),_("code",[e._v("git push")]),e._v("；或者可以通过 "),_("code",[e._v("git config")]),e._v(" 修改 "),_("code",[e._v("push.default")]),e._v(" 来改变 "),_("code",[e._v("push")]),e._v(" 时的行为逻辑。")]),_("li",[_("code",[e._v("push")]),e._v(" 的时候之后上传当前分支，并不会上传 "),_("code",[e._v("HEAD")]),e._v("；远程仓库的 "),_("code",[e._v("HEAD")]),e._v(" 是永远指向默认分支（即 "),_("code",[e._v("master")]),e._v("）的。")])])}],!1,null,null,null);t.default=s.exports}}]);